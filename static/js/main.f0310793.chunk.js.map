{"version":3,"sources":["constants/index.js","components/Button/index.js","components/Search/index.js","components/Table/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["DEFAULT_QUERY","Button","_ref","onClick","className","children","react_default","a","createElement","type","defaultProps","Component","Loading","index_es","icon","ButtonWithLoading","_ref2","isLoading","rest","Object","objectWithoutProperties","Button_Loading","Search","this","input","focus","_this","_this$props","props","value","onChange","onSubmit","ref","el","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENTS","reverse","POINTS","Sort","sortKey","onSort","components_Button","Table","onDismiss","style","width","Table_Sort","map","item","key","objectID","href","url","title","author","num_comments","points","library","add","faSpinner","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_isMounted","state","message","results","searchKey","searchTerm","error","needsToSearchTopStories","bind","assertThisInitialized","setSearchTopStories","fetchSearchTopStories","onSearchChange","onSearchSubmit","setState","result","hits","page","_this$state","oldHits","updatedHits","concat","toConsumableArray","objectSpread","defineProperty","_this2","arguments","length","undefined","PATH_BASE","axios","then","data","catch","event","target","preventDefault","id","_this$state2","_results$searchKey","filter","_this3","_this$state3","components_Search","components_Table","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gTAEaA,SAAgB,yBCEvBC,EAAS,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAASC,EAAZF,EAAYE,UAAWC,EAAvBH,EAAuBG,SAAvB,OACbC,EAAAC,EAAAC,cAAA,UAAQL,QAASA,EAASC,UAAWA,EAAWK,KAAK,UAClDJ,IAILJ,EAAOS,aAAe,CACpBN,UAAW,IASb,IASoBO,EATdC,EAAU,kBACdN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAiBC,KAAK,eAStBC,GAHcJ,EAGkBV,EAHL,SAAAe,GAAA,IAAGC,EAAHD,EAAGC,UAAcC,EAAjBC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,sBAC/BC,EAAYX,EAAAC,EAAAC,cAACa,EAAD,MAAcf,EAAAC,EAAAC,cAACG,EAAcO,KAI5BjB,ICAAqB,8LA7BPC,KAAKC,OACPD,KAAKC,MAAMC,yCAIN,IAAAC,EAAAH,KAAAI,EACyCJ,KAAKK,MAA7CC,EADDF,EACCE,MAAOC,EADRH,EACQG,SAAUC,EADlBJ,EACkBI,SAAU1B,EAD5BsB,EAC4BtB,SAEnC,OACEC,EAAAC,EAAAC,cAAA,QAAMuB,SAAUA,GACdzB,EAAAC,EAAAC,cAAA,SACEC,KAAK,OACLoB,MAAOA,EACPC,SAAUA,EACVE,IAAK,SAAAC,GAAE,OAAKP,EAAKF,MAAQS,KAE3B3B,EAAAC,EAAAC,cAAA,UAAQC,KAAK,UAAUJ,WAlBVM,oBCEfuB,EAAQ,CACZC,KAAM,SAAAC,GAAI,OAAIA,GACdC,MAAO,SAAAD,GAAI,OAAIE,iBAAOF,EAAM,UAC5BG,OAAQ,SAAAH,GAAI,OAAIE,iBAAOF,EAAM,WAC7BI,SAAU,SAAAJ,GAAI,OAAIE,iBAAOF,EAAM,gBAAgBK,WAC/CC,OAAQ,SAAAN,GAAI,OAAIE,iBAAOF,EAAM,UAAUK,YAGnCE,EAAO,SAAAzC,GAAA,IAAG0C,EAAH1C,EAAG0C,QAASC,EAAZ3C,EAAY2C,OAAQxC,EAApBH,EAAoBG,SAApB,OACXC,EAAAC,EAAAC,cAACsC,EAAD,CAAQ3C,QAAS,kBAAM0C,EAAOD,KAAWvC,IA4E5B0C,EAzED,SAAA/B,GAA0C,IAAvCoB,EAAuCpB,EAAvCoB,KAAMQ,EAAiC5B,EAAjC4B,QAASC,EAAwB7B,EAAxB6B,OAAQG,EAAgBhC,EAAhBgC,UACtC,OACE1C,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,SACbE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,gBACbE,EAAAC,EAAAC,cAAA,QAAMyC,MAAO,CAAEC,MAAO,QACpB5C,EAAAC,EAAAC,cAAC2C,EAAD,CAAMP,QAAQ,QAAQC,OAAQA,GAA9B,UAKFvC,EAAAC,EAAAC,cAAA,QAAMyC,MAAO,CAAEC,MAAO,QACpB5C,EAAAC,EAAAC,cAAC2C,EAAD,CAAMP,QAAQ,SAASC,OAAQA,GAA/B,WAKFvC,EAAAC,EAAAC,cAAA,QAAMyC,MAAO,CAAEC,MAAO,QACpB5C,EAAAC,EAAAC,cAAC2C,EAAD,CAAMP,QAAQ,WAAWC,OAAQA,GAAjC,aAKFvC,EAAAC,EAAAC,cAAA,QAAMyC,MAAO,CAAEC,MAAO,QACpB5C,EAAAC,EAAAC,cAAC2C,EAAD,CAAMP,QAAQ,SAASC,OAAQA,GAA/B,WAKFvC,EAAAC,EAAAC,cAAA,QAAMyC,MAAO,CAAEC,MAAO,QAAtB,YAGDhB,EAAMU,GAASR,GAAMgB,IAAI,SAAAC,GAAI,OAC5B/C,EAAAC,EAAAC,cAAA,OAAK8C,IAAKD,EAAKE,SAAUnD,UAAU,aACjCE,EAAAC,EAAAC,cAAA,QAAMyC,MAAO,CAAEC,MAAO,QACpB5C,EAAAC,EAAAC,cAAA,KAAGgD,KAAMH,EAAKI,KAAMJ,EAAKK,QAG3BpD,EAAAC,EAAAC,cAAA,QAAMyC,MAAO,CAAEC,MAAO,QAAUG,EAAKM,QACrCrD,EAAAC,EAAAC,cAAA,QAAMyC,MAAO,CAAEC,MAAO,QAAUG,EAAKO,cACrCtD,EAAAC,EAAAC,cAAA,QAAMyC,MAAO,CAAEC,MAAO,QAAUG,EAAKQ,QACrCvD,EAAAC,EAAAC,cAAA,QAAMyC,MAAO,CAAEC,MAAO,QACpB5C,EAAAC,EAAAC,cAACsC,EAAD,CACE3C,QAAS,kBAAM6C,EAAUK,EAAKE,WAC9BnD,UAAU,iBAFZ,YAOFE,EAAAC,EAAAC,cAAA,+BCzCVsD,IAAQC,IAAIC,SAuKGC,cAlKb,SAAAA,EAAYrC,GAAO,IAAAF,EAAA,OAAAP,OAAA+C,EAAA,EAAA/C,CAAAI,KAAA0C,IACjBvC,EAAAP,OAAAgD,EAAA,EAAAhD,CAAAI,KAAAJ,OAAAiD,EAAA,EAAAjD,CAAA8C,GAAAI,KAAA9C,KAAMK,KAHR0C,YAAa,EAIX5C,EAAK6C,MAAQ,CACXC,QAAS,uCACTC,QAAS,KACTC,UAAW,GACXC,WAAY3E,EACZ4E,MAAO,KACP3D,WAAW,EACX2B,QAAS,QAGXlB,EAAKmD,wBAA0BnD,EAAKmD,wBAAwBC,KAA7B3D,OAAA4D,EAAA,EAAA5D,QAAA4D,EAAA,EAAA5D,CAAAO,KAC/BA,EAAKsD,oBAAsBtD,EAAKsD,oBAAoBF,KAAzB3D,OAAA4D,EAAA,EAAA5D,QAAA4D,EAAA,EAAA5D,CAAAO,KAC3BA,EAAKuD,sBAAwBvD,EAAKuD,sBAAsBH,KAA3B3D,OAAA4D,EAAA,EAAA5D,QAAA4D,EAAA,EAAA5D,CAAAO,KAC7BA,EAAKwD,eAAiBxD,EAAKwD,eAAeJ,KAApB3D,OAAA4D,EAAA,EAAA5D,QAAA4D,EAAA,EAAA5D,CAAAO,KACtBA,EAAKyD,eAAiBzD,EAAKyD,eAAeL,KAApB3D,OAAA4D,EAAA,EAAA5D,QAAA4D,EAAA,EAAA5D,CAAAO,KACtBA,EAAKsB,UAAYtB,EAAKsB,UAAU8B,KAAf3D,OAAA4D,EAAA,EAAA5D,QAAA4D,EAAA,EAAA5D,CAAAO,KACjBA,EAAKmB,OAASnB,EAAKmB,OAAOiC,KAAZ3D,OAAA4D,EAAA,EAAA5D,QAAA4D,EAAA,EAAA5D,CAAAO,KAlBGA,mFAsBjBH,KAAK+C,YAAa,EADA,IAEVK,EAAepD,KAAKgD,MAApBI,WACRpD,KAAK6D,SAAS,CAAEV,UAAWC,IAC3BpD,KAAK0D,sBAAsBN,gDAI3BpD,KAAK+C,YAAa,iCAGb1B,GACLrB,KAAK6D,SAAS,CAAExC,4DAGM+B,GACtB,OAAQpD,KAAKgD,MAAME,QAAQE,+CAGTU,GAAQ,IAClBC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KADYC,EAEKjE,KAAKgD,MAA5BG,EAFkBc,EAElBd,UAAWD,EAFOe,EAEPf,QACbgB,EACJhB,GAAWA,EAAQC,GAAaD,EAAQC,GAAWY,KAAO,GACtDI,EAAW,GAAAC,OAAAxE,OAAAyE,EAAA,EAAAzE,CAAOsE,GAAPtE,OAAAyE,EAAA,EAAAzE,CAAmBmE,IACpC/D,KAAK6D,SAAS,CACZX,QAAQtD,OAAA0E,EAAA,EAAA1E,CAAA,GAAMsD,EAAPtD,OAAA2E,EAAA,EAAA3E,CAAA,GAAiBuD,EAAY,CAAEY,KAAMI,EAAaH,UACzDtE,WAAW,kDAIO0D,GAAsB,IAAAoB,EAAAxE,KAAVgE,EAAUS,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EACvCzE,KAAK6D,SAAS,CAAEnE,WAAW,IAC3B,IAAMwC,EACJ0C,sDAIAxB,EACA,oBAKAY,EACA,kBAMFa,IAAM3C,GACH4C,KAAK,SAAAhB,GAAM,OAAIU,EAAKzB,YAAcyB,EAAKf,oBAAoBK,EAAOiB,QAClEC,MAAM,SAAA3B,GAAK,OAAImB,EAAKzB,YAAcyB,EAAKX,SAAS,CAAER,mDAQxC4B,GACbjF,KAAK6D,SAAS,CAAET,WAAY6B,EAAMC,OAAO5E,+CAG5B2E,GAAO,IACZ7B,EAAepD,KAAKgD,MAApBI,WACRpD,KAAK6D,SAAS,CAAEV,UAAWC,IAEvBpD,KAAKsD,wBAAwBF,IAC/BpD,KAAK0D,sBAAsBN,GAG7B6B,EAAME,mDAGEC,GAAI,IAAAC,EACmBrF,KAAKgD,MAA5BG,EADIkC,EACJlC,UAAWD,EADPmC,EACOnC,QADPoC,EAEWpC,EAAQC,GAAvBY,EAFIuB,EAEJvB,KAAMC,EAFFsB,EAEEtB,KAGRG,EAAcJ,EAAKwB,OADT,SAAAzD,GAAI,OAAIA,EAAKE,WAAaoD,IAE1CpF,KAAK6D,SAAS,CACZX,QAAQtD,OAAA0E,EAAA,EAAA1E,CAAA,GAAMsD,EAAPtD,OAAA2E,EAAA,EAAA3E,CAAA,GAAiBuD,EAAY,CAAEY,KAAMI,EAAaH,6CAIpD,IAAAwB,EAAAxF,KAAAyF,EASHzF,KAAKgD,MAPPI,EAFKqC,EAELrC,WACAH,EAHKwC,EAGLxC,QACAC,EAJKuC,EAILvC,QACAC,EALKsC,EAKLtC,UACAE,EANKoC,EAMLpC,MACA3D,EAPK+F,EAOL/F,UACA2B,EARKoE,EAQLpE,QAEI2C,EACHd,GAAWA,EAAQC,IAAcD,EAAQC,GAAWa,MAAS,EAC1DnD,EACHqC,GAAWA,EAAQC,IAAcD,EAAQC,GAAWY,MAAS,GAEhE,OACEhF,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,QACbE,EAAAC,EAAAC,cAAA,UAAKgE,GAELlE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,gBACbE,EAAAC,EAAAC,cAACyG,EAAD,CACEpF,MAAO8C,EACP7C,SAAUP,KAAK2D,eACfnD,SAAUR,KAAK4D,gBAHjB,WAQDP,EACCtE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,gBACbE,EAAAC,EAAAC,cAAA,mCAGFF,EAAAC,EAAAC,cAAC0G,EAAD,CACE9E,KAAMA,EACNQ,QAASA,EACTC,OAAQtB,KAAKsB,OACbG,UAAWzB,KAAKyB,YAIpB1C,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,gBACbE,EAAAC,EAAAC,cAACO,EAAD,CACEE,UAAWA,EACXd,QAAS,kBAAM4G,EAAK9B,sBAAsBP,EAAWa,EAAO,KAF9D,qBAzJQ5E,aCdEwG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnH,EAAAC,EAAAC,cAACkH,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1B,KAAK,SAAA2B,GACjCA,EAAaC","file":"static/js/main.f0310793.chunk.js","sourcesContent":["//Define API Constant - Hacker News Search API\n\nexport const DEFAULT_QUERY = \"react\";\nexport const DEFAULT_HPP = \"25\";\nexport const DEFAULT_TAG = \"story\";\n\nexport const PATH_BASE = \"https://hn.algolia.com/api/v1\";\nexport const PATH_SEARCH = \"/search_by_date\";\nexport const PARAM_SEARCH = \"query=\";\nexport const PARAM_TAG = \"tags=\";\nexport const PARAM_PAGE = \"page=\";\nexport const PARAM_HPP = \"hitsPerPage=\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Button = ({ onClick, className, children }) => (\n  <button onClick={onClick} className={className} type=\"button\">\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  className: \"\"\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired\n};\n\nconst Loading = () => (\n  <div>\n    <h1>\n      <FontAwesomeIcon icon=\"spinner\" />\n    </h1>\n    {/* Loading ... */}\n  </div>\n);\n\nconst withLoading = Component => ({ isLoading, ...rest }) =>\n  isLoading ? <Loading /> : <Component {...rest} />;\n\nconst ButtonWithLoading = withLoading(Button);\n\nexport default Button;\nexport { ButtonWithLoading };\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Search extends Component {\n  componentDidMount() {\n    if (this.input) {\n      this.input.focus();\n    }\n  }\n\n  render() {\n    const { value, onChange, onSubmit, children } = this.props;\n\n    return (\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n          ref={el => (this.input = el)}\n        />\n        <button type=\"submit\">{children}</button>\n      </form>\n    );\n  }\n}\n\nSearch.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n  children: PropTypes.string\n};\n\nexport default Search;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"../Button\";\nimport { sortBy } from \"lodash\";\n\nconst SORTS = {\n  NONE: list => list,\n  TITLE: list => sortBy(list, \"title\"),\n  AUTHOR: list => sortBy(list, \"author\"),\n  COMMENTS: list => sortBy(list, \"num_comments\").reverse(),\n  POINTS: list => sortBy(list, \"points\").reverse()\n};\n\nconst Sort = ({ sortKey, onSort, children }) => (\n  <Button onClick={() => onSort(sortKey)}>{children}</Button>\n);\n\nconst Table = ({ list, sortKey, onSort, onDismiss }) => {\n  return (\n    <div className=\"table\">\n      <div className=\"table-header\">\n        <span style={{ width: \"55%\" }}>\n          <Sort sortKey=\"TITLE\" onSort={onSort}>\n            Title\n          </Sort>\n        </span>\n\n        <span style={{ width: \"15%\" }}>\n          <Sort sortKey=\"AUTHOR\" onSort={onSort}>\n            Author\n          </Sort>\n        </span>\n\n        <span style={{ width: \"10%\" }}>\n          <Sort sortKey=\"COMMENTS\" onSort={onSort}>\n            Comments\n          </Sort>\n        </span>\n\n        <span style={{ width: \"10%\" }}>\n          <Sort sortKey=\"POINTS\" onSort={onSort}>\n            Points\n          </Sort>\n        </span>\n\n        <span style={{ width: \"10%\" }}>Archive</span>\n      </div>\n\n      {SORTS[sortKey](list).map(item => (\n        <div key={item.objectID} className=\"table-row\">\n          <span style={{ width: \"55%\" }}>\n            <a href={item.url}>{item.title}</a>\n          </span>\n          {/* <span style={{ width: \"20%\" }}>{item.created_at}</span> */}\n          <span style={{ width: \"15%\" }}>{item.author}</span>\n          <span style={{ width: \"10%\" }}>{item.num_comments}</span>\n          <span style={{ width: \"10%\" }}>{item.points}</span>\n          <span style={{ width: \"10%\" }}>\n            <Button\n              onClick={() => onDismiss(item.objectID)}\n              className=\"button-inline\"\n            >\n              Dismiss\n            </Button>\n          </span>\n          <hr />\n        </div>\n      ))}\n    </div>\n  );\n};\n\n// Table.propTypes = {\n//   list: PropTypes.array.isRequired,\n//   onDismiss: PropTypes.func.isRequired\n// };\n\nTable.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      objectID: PropTypes.string.isRequired,\n      author: PropTypes.string,\n      url: PropTypes.string,\n      num_comments: PropTypes.number,\n      points: PropTypes.number\n    })\n  ).isRequired,\n  onDismiss: PropTypes.func.isRequired\n};\n\nexport default Table;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport \"./index.css\";\nimport {\n  DEFAULT_QUERY,\n  DEFAULT_TAG,\n  DEFAULT_HPP,\n  PATH_BASE,\n  PATH_SEARCH,\n  PARAM_SEARCH,\n  PARAM_TAG,\n  PARAM_PAGE,\n  PARAM_HPP\n} from \"../../constants\";\n\nimport { ButtonWithLoading } from \"../Button\";\nimport Search from \"../Search\";\nimport Table from \"../Table\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faSpinner);\n\nclass App extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"Welcome to the Road to learn React!!\",\n      results: null,\n      searchKey: \"\",\n      searchTerm: DEFAULT_QUERY,\n      error: null,\n      isLoading: false,\n      sortKey: \"NONE\"\n    };\n\n    this.needsToSearchTopStories = this.needsToSearchTopStories.bind(this);\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.fetchSearchTopStories = this.fetchSearchTopStories.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n    this.onSort = this.onSort.bind(this);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  componentWillMount() {\n    this._isMounted = false;\n  }\n\n  onSort(sortKey) {\n    this.setState({ sortKey });\n  }\n\n  needsToSearchTopStories(searchTerm) {\n    return !this.state.results[searchTerm];\n  }\n\n  setSearchTopStories(result) {\n    const { hits, page } = result;\n    const { searchKey, results } = this.state;\n    const oldHits =\n      results && results[searchKey] ? results[searchKey].hits : [];\n    const updatedHits = [...oldHits, ...hits];\n    this.setState({\n      results: { ...results, [searchKey]: { hits: updatedHits, page } },\n      isLoading: false\n    });\n  }\n\n  fetchSearchTopStories(searchTerm, page = 0) {\n    this.setState({ isLoading: true });\n    const url =\n      PATH_BASE +\n      PATH_SEARCH +\n      \"?\" +\n      PARAM_SEARCH +\n      searchTerm +\n      \"&\" +\n      PARAM_TAG +\n      DEFAULT_TAG +\n      \"&\" +\n      PARAM_PAGE +\n      page +\n      \"&\" +\n      PARAM_HPP +\n      DEFAULT_HPP;\n\n    // console.log(url);\n\n    axios(url)\n      .then(result => this._isMounted && this.setSearchTopStories(result.data))\n      .catch(error => this._isMounted && this.setState({ error }));\n\n    // fetch(url)\n    //   .then(response => response.json())\n    //   .then(result => this.setSearchTopStories(result))\n    //   .catch(error => this.setState({ error }));\n  }\n\n  onSearchChange(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  onSearchSubmit(event) {\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n\n    if (this.needsToSearchTopStories(searchTerm)) {\n      this.fetchSearchTopStories(searchTerm);\n    }\n\n    event.preventDefault();\n  }\n\n  onDismiss(id) {\n    const { searchKey, results } = this.state;\n    const { hits, page } = results[searchKey];\n\n    const isNotId = item => item.objectID !== id;\n    const updatedHits = hits.filter(isNotId);\n    this.setState({\n      results: { ...results, [searchKey]: { hits: updatedHits, page } }\n    });\n  }\n\n  render() {\n    const {\n      searchTerm,\n      message,\n      results,\n      searchKey,\n      error,\n      isLoading,\n      sortKey\n    } = this.state;\n    const page =\n      (results && results[searchKey] && results[searchKey].page) || 0;\n    const list =\n      (results && results[searchKey] && results[searchKey].hits) || [];\n\n    return (\n      <div className=\"page\">\n        <h2>{message}</h2>\n\n        <div className=\"interactions\">\n          <Search\n            value={searchTerm}\n            onChange={this.onSearchChange}\n            onSubmit={this.onSearchSubmit}\n          >\n            Search\n          </Search>\n        </div>\n        {error ? (\n          <div className=\"interactions\">\n            <p>Something went wrong!</p>\n          </div>\n        ) : (\n          <Table\n            list={list}\n            sortKey={sortKey}\n            onSort={this.onSort}\n            onDismiss={this.onDismiss}\n          />\n        )}\n\n        <div className=\"interactions\">\n          <ButtonWithLoading\n            isLoading={isLoading}\n            onClick={() => this.fetchSearchTopStories(searchKey, page + 1)}\n          >\n            More ...\n          </ButtonWithLoading>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}