{"version":3,"sources":["constants/index.js","components/Button/index.js","components/Search/index.js","components/Table/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["DEFAULT_QUERY","Button","_ref","onClick","className","children","react_default","a","createElement","type","defaultProps","Component","Loading","index_es","icon","ButtonWithLoading","_ref2","isLoading","rest","Object","objectWithoutProperties","Button_Loading","Search","this","input","focus","_this","_this$props","props","value","onChange","onSubmit","ref","el","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENTS","reverse","POINTS","Sort","sortKey","activeSortKey","isSortReverse","onSort","sortClass","classNames","button-active","sortIcon","components_Button","Table","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","setState","onDismiss","_this$state","sortedList","reverseSortedList","style","width","Table_Sort","map","item","key","objectID","href","url","title","author","num_comments","points","library","add","faSearch","faSpinner","faAngleUp","faAngleDown","App","_isMounted","message","results","searchKey","searchTerm","error","needsToSearchTopStories","setSearchTopStories","fetchSearchTopStories","onSearchChange","onSearchSubmit","result","hits","page","oldHits","updatedHits","concat","toConsumableArray","objectSpread","defineProperty","_this2","arguments","length","undefined","PATH_BASE","axios","then","data","catch","event","target","preventDefault","id","_this$state2","_results$searchKey","filter","_this3","_this$state3","components_Search","components_Table","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68f6780a.chunk.js","sourcesContent":["//Define API Constant - Hacker News Search API\n\nexport const DEFAULT_QUERY = \"react\";\nexport const DEFAULT_HPP = \"25\";\nexport const DEFAULT_TAG = \"story\";\n\nexport const PATH_BASE = \"https://hn.algolia.com/api/v1\";\nexport const PATH_SEARCH = \"/search_by_date\";\nexport const PARAM_SEARCH = \"query=\";\nexport const PARAM_TAG = \"tags=\";\nexport const PARAM_PAGE = \"page=\";\nexport const PARAM_HPP = \"hitsPerPage=\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Button = ({ onClick, className, children }) => (\n  <button onClick={onClick} className={className} type=\"button\">\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  className: \"\"\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired\n};\n\nconst Loading = () => (\n  <div>\n    <h1>\n      <FontAwesomeIcon icon=\"spinner\" />\n    </h1>\n    {/* Loading ... */}\n  </div>\n);\n\nconst withLoading = Component => ({ isLoading, ...rest }) =>\n  isLoading ? <Loading /> : <Component {...rest} />;\n\nconst ButtonWithLoading = withLoading(Button);\n\nexport default Button;\nexport { ButtonWithLoading };\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Search extends Component {\n  componentDidMount() {\n    if (this.input) {\n      this.input.focus();\n    }\n  }\n\n  render() {\n    const { value, onChange, onSubmit, children } = this.props;\n\n    return (\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n          ref={el => (this.input = el)}\n        />\n        <button type=\"submit\">{children}</button>\n      </form>\n    );\n  }\n}\n\nSearch.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n  children: PropTypes.string\n};\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"../Button\";\nimport { sortBy } from \"lodash\";\nimport classNames from \"classnames\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst SORTS = {\n  NONE: list => list,\n  TITLE: list => sortBy(list, \"title\"),\n  AUTHOR: list => sortBy(list, \"author\"),\n  COMMENTS: list => sortBy(list, \"num_comments\").reverse(),\n  POINTS: list => sortBy(list, \"points\").reverse()\n};\n\nconst Sort = ({ sortKey, activeSortKey, isSortReverse, onSort, children }) => {\n  const sortClass = classNames(\"button-inline\", {\n    \"button-active\": sortKey === activeSortKey\n  });\n\n  const sortIcon =\n    sortKey === activeSortKey ? (\n      isSortReverse ? (\n        <FontAwesomeIcon icon=\"angle-down\" />\n      ) : (\n        <FontAwesomeIcon icon=\"angle-up\" />\n      )\n    ) : (\n      \"\"\n    );\n\n  return (\n    <Button onClick={() => onSort(sortKey)} className={sortClass}>\n      {sortIcon} {children}\n    </Button>\n  );\n};\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortKey: \"NONE\",\n      isSortReverse: false\n    };\n    this.onSort = this.onSort.bind(this);\n  }\n\n  onSort(sortKey) {\n    const isSortReverse =\n      this.state.sortKey === sortKey && !this.state.isSortReverse;\n    this.setState({ sortKey, isSortReverse });\n  }\n\n  render() {\n    const { list, onDismiss } = this.props;\n    const { sortKey, isSortReverse } = this.state;\n    const sortedList = SORTS[sortKey](list);\n    const reverseSortedList = isSortReverse ? sortedList.reverse() : sortedList;\n\n    return (\n      <div className=\"table\">\n        <div className=\"table-header\">\n          <span style={{ width: \"55%\" }}>\n            <Sort\n              sortKey=\"TITLE\"\n              onSort={this.onSort}\n              isSortReverse={isSortReverse}\n              activeSortKey={sortKey}\n            >\n              Title\n            </Sort>\n          </span>\n\n          <span style={{ width: \"15%\" }}>\n            <Sort\n              sortKey=\"AUTHOR\"\n              onSort={this.onSort}\n              isSortReverse={isSortReverse}\n              activeSortKey={sortKey}\n            >\n              Author\n            </Sort>\n          </span>\n\n          <span style={{ width: \"10%\" }}>\n            <Sort\n              sortKey=\"COMMENTS\"\n              onSort={this.onSort}\n              isSortReverse={isSortReverse}\n              activeSortKey={sortKey}\n            >\n              Comments\n            </Sort>\n          </span>\n\n          <span style={{ width: \"10%\" }}>\n            <Sort\n              sortKey=\"POINTS\"\n              onSort={this.onSort}\n              isSortReverse={isSortReverse}\n              activeSortKey={sortKey}\n            >\n              Points\n            </Sort>\n          </span>\n\n          <span style={{ width: \"10%\" }}>Archive</span>\n        </div>\n\n        {reverseSortedList.map(item => (\n          <div key={item.objectID} className=\"table-row\">\n            <span style={{ width: \"55%\" }}>\n              <a href={item.url}>{item.title}</a>\n            </span>\n            {/* <span style={{ width: \"20%\" }}>{item.created_at}</span> */}\n            <span style={{ width: \"15%\" }}>{item.author}</span>\n            <span style={{ width: \"10%\" }}>{item.num_comments}</span>\n            <span style={{ width: \"10%\" }}>{item.points}</span>\n            <span style={{ width: \"10%\" }}>\n              <Button\n                onClick={() => onDismiss(item.objectID)}\n                className=\"button-inline\"\n              >\n                Dismiss\n              </Button>\n            </span>\n            <hr />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\n// Table.propTypes = {\n//   list: PropTypes.array.isRequired,\n//   onDismiss: PropTypes.func.isRequired\n// };\n\nTable.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      objectID: PropTypes.string.isRequired,\n      author: PropTypes.string,\n      url: PropTypes.string,\n      num_comments: PropTypes.number,\n      points: PropTypes.number\n    })\n  ).isRequired,\n  onDismiss: PropTypes.func\n};\n\nexport default Table;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport \"./index.css\";\nimport {\n  DEFAULT_QUERY,\n  DEFAULT_TAG,\n  DEFAULT_HPP,\n  PATH_BASE,\n  PATH_SEARCH,\n  PARAM_SEARCH,\n  PARAM_TAG,\n  PARAM_PAGE,\n  PARAM_HPP\n} from \"../../constants\";\n\nimport { ButtonWithLoading } from \"../Button\";\nimport Search from \"../Search\";\nimport Table from \"../Table\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSearch,\n  faSpinner,\n  faAngleUp,\n  faAngleDown\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faSearch, faSpinner, faAngleUp, faAngleDown);\n\nclass App extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"Start to Search for the Latest Hacker News Now!!!\",\n      results: null,\n      searchKey: \"\",\n      searchTerm: DEFAULT_QUERY,\n      error: null,\n      isLoading: false\n    };\n\n    this.needsToSearchTopStories = this.needsToSearchTopStories.bind(this);\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.fetchSearchTopStories = this.fetchSearchTopStories.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  componentWillMount() {\n    this._isMounted = false;\n  }\n\n  needsToSearchTopStories(searchTerm) {\n    return !this.state.results[searchTerm];\n  }\n\n  setSearchTopStories(result) {\n    const { hits, page } = result;\n    const { searchKey, results } = this.state;\n    const oldHits =\n      results && results[searchKey] ? results[searchKey].hits : [];\n    const updatedHits = [...oldHits, ...hits];\n    this.setState({\n      results: { ...results, [searchKey]: { hits: updatedHits, page } },\n      isLoading: false\n    });\n  }\n\n  fetchSearchTopStories(searchTerm, page = 0) {\n    this.setState({ isLoading: true });\n    const url =\n      PATH_BASE +\n      PATH_SEARCH +\n      \"?\" +\n      PARAM_SEARCH +\n      searchTerm +\n      \"&\" +\n      PARAM_TAG +\n      DEFAULT_TAG +\n      \"&\" +\n      PARAM_PAGE +\n      page +\n      \"&\" +\n      PARAM_HPP +\n      DEFAULT_HPP;\n\n    // console.log(url);\n\n    axios(url)\n      .then(result => this._isMounted && this.setSearchTopStories(result.data))\n      .catch(error => this._isMounted && this.setState({ error }));\n\n    // fetch(url)\n    //   .then(response => response.json())\n    //   .then(result => this.setSearchTopStories(result))\n    //   .catch(error => this.setState({ error }));\n  }\n\n  onSearchChange(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  onSearchSubmit(event) {\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n\n    if (this.needsToSearchTopStories(searchTerm)) {\n      this.fetchSearchTopStories(searchTerm);\n    }\n\n    event.preventDefault();\n  }\n\n  onDismiss(id) {\n    const { searchKey, results } = this.state;\n    const { hits, page } = results[searchKey];\n\n    const isNotId = item => item.objectID !== id;\n    const updatedHits = hits.filter(isNotId);\n    this.setState({\n      results: { ...results, [searchKey]: { hits: updatedHits, page } }\n    });\n  }\n\n  render() {\n    const {\n      searchTerm,\n      message,\n      results,\n      searchKey,\n      error,\n      isLoading,\n      sortKey,\n      isSortReverse\n    } = this.state;\n    const page =\n      (results && results[searchKey] && results[searchKey].page) || 0;\n    const list =\n      (results && results[searchKey] && results[searchKey].hits) || [];\n\n    return (\n      <div className=\"page\">\n        <div className=\"div\">\n          <h2>{message}</h2>\n        </div>\n\n        <div className=\"interactions\">\n          <Search\n            value={searchTerm}\n            onChange={this.onSearchChange}\n            onSubmit={this.onSearchSubmit}\n          >\n            <FontAwesomeIcon icon=\"search\" /> Search\n          </Search>\n        </div>\n\n        {error ? (\n          <div className=\"interactions\">\n            <p>Something went wrong!</p>\n          </div>\n        ) : (\n          <Table list={list} onDismiss={this.onDismiss} />\n        )}\n\n        <div className=\"interactions\">\n          <ButtonWithLoading\n            isLoading={isLoading}\n            onClick={() => this.fetchSearchTopStories(searchKey, page + 1)}\n          >\n            More ...\n          </ButtonWithLoading>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}